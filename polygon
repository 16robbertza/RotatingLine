import javax.swing.JPanel;

import java.lang.Math;
import java.util.ArrayList;
public class Polygon {

	private int numSides;
	private double radius; //round it? Math.round?
	private double drawAngle;
	private int sideLength;
	
	
	public Polygon(int numSides, int sideLength) {
		this.numSides = numSides;
		this.sideLength = sideLength;
		this.drawAngle = (double)360/numSides; //degrees for now
		this.radius=Math.abs(sideLength/(2*Math.sin(180/numSides)));
		
	}
	
	public String toString(){
		String s=("Polygon with "+ getNumSides()+ " sides of length "+
	getSideLength()+ " drawn at an angle of "+ getdrawAngle()+ " and radius of "+getRadius());
		return s;
	}
	
	public int getNumSides() {
		return numSides;
	}

	public void setNumSides(int numSides) {
		this.numSides = numSides;
	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double radius) {
		this.radius = radius;
	}

	public double getdrawAngle() {
		return drawAngle;
	}

	public void setdrawAngle(double drawAngle) {
		this.drawAngle = drawAngle;
	}

	public int getSideLength() {
		return sideLength;
	}

	public void setSideLength(int sideLength) {
		this.sideLength = sideLength;
	}

	public void rotateOnce(int direction){ //clockwise is 0, counter is 1 ????
		if (direction == 0)
			setdrawAngle(getdrawAngle()+1); //increment by one degree --this is also going clockwise
		if (direction == 1)
			setdrawAngle(getdrawAngle()-1); //should i make a rotate with a while loop or something?
	}
	
	//method to return a 2D double array of points 
	//public 
	public int[][] getPoints(int width, int height)){
		int[][] points = new int[getNumSides()][2];
		
		//receive frame in constructor or receive dimensions of area painted on
		
	}
	
	public void rotate(int direction){
		
	}
	
	public static void main(String[] args) {
		Polygon a = new Polygon(2, 5);
		Polygon b = new Polygon(10, 3);
		Polygon c = new Polygon(5, 7);
		
		System.out.println(a.toString());
		System.out.println(b.toString());
		System.out.println(c.toString());
		
		c.rotateOnce(1);
		
		System.out.println(c.toString());


	}

}
